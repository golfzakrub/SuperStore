# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

##pyuic5 -x App.ui -o app.py
from PyQt5 import QtCore, QtGui, QtWidgets 
import  pandas as pd 
import sys
from PyQt5.QtWidgets import QApplication,QTableView,QMainWindow, QTableWidgetItem
from PyQt5.QtCore import QAbstractTableModel,Qt
import matplotlib.pyplot as plt
import numpy as np


class Ui_MainWindow(object):
    def __init__(self):
        self.all_data = pd.read_csv('store.csv',encoding="utf-8")
        # print(self.all_data)
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(844, 643)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(310, 20, 481, 521))
        self.tabWidget.setObjectName("tabWidget")
        self.DataFrame = QtWidgets.QWidget()
        self.DataFrame.setObjectName("DataFrame")
        self.tableWidget = QtWidgets.QTableWidget(self.DataFrame)
        self.tableWidget.setGeometry(QtCore.QRect(0, 0, 471, 491))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.tabWidget.addTab(self.DataFrame, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(30, 40, 256, 501))
        self.listWidget.setObjectName("listWidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 10, 251, 41))
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 844, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)


        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.DataFrame), _translate("MainWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Page"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.label.setText(_translate("MainWindow", "LIST HEADER"))
        self.showdata()


    def showdata(self):
        numcolumn = len(self.all_data)
        print("o",numcolumn)
        if numcolumn == 0:
            numRows = len(self.all_data.index)
            print("ok",self.all_data.index)
        else:
            numRows = numcolumn
        self.tableWidget.setColumnCount(len(self.all_data.columns))
        self.tableWidget.setRowCount(numRows)
        self.tableWidget.setHorizontalHeaderLabels(self.all_data.columns)
        

        for x in self.all_data.columns:
            self.listWidget.addItem(x)
    
            
        
        for i in range(numRows):
            for j in range(len(self.all_data.columns)):
                # print("okk",self.all_data.columns)
                self.tableWidget.setItem(i, j, QTableWidgetItem(str(self.all_data.iat[i,j])))
        
        # self.graph()
                
    def graph(self):
        profitpositive = []
        profitnagetive = []
        for i in self.all_data['Profit']:
            if i >= 0:
                profitpositive.append(i)
            elif i < 0:
                profitnagetive.append(i)
        pos = sum(profitpositive)
        nag = sum(profitnagetive)
        print(pos)
        print(nag)
        calall = pos+(nag*-1)
        calpos = (pos/calall)*100
        calnag = ((nag*-1)/calall)*100
        labeldone = " Profit "+str("%.2f" %pos) +" => "+str("%.2f" %calpos) + "%"
        labelundone = " loss " + str("%.2f" %(nag*-1))+" => "+str("%.2f" %calnag) + "%"
        Labels = [labeldone,labelundone]
        plt.pie([pos,nag*-1],labels=Labels)
        plt.title("Graph ")
        plt.show()
                
        # self.tableWidget.resizeColumnToContents()
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
